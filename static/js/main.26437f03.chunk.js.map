{"version":3,"sources":["Grabb.js","GrabbModel.js","data.js","pages/Grabbar.js","pages/Header.js","pages/Footer.js","pages/Timer.js","pages/TicTacToe.js","pages/Settings.js","pages/GrabbLiga.js","pages/Riddle.js","pages/TimerGrabberMind.js","pages/Grabbermind.js","App.js","serviceWorker.js","index.js"],"names":["Grabb","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","name","props","attributes","total","attributeDivs","map","attribute","react_default","a","createElement","className","title","shortName","Component","GrabbModel","points","wins","results","_this","totalPoints","sum","i","totalWins","win","getTotal","reduce","Math","round","length","grabbar","id","grabb0","grabb1","grabb2","grabb3","grabb4","grabb5","grabb6","grabb7","grabb8","grabb9","Grabbar","Grabb_Grabb","Header","totalMoves","Fragment","Footer","hasWinner","handleRestart","onClick","index_esm","Timer","call","incrementCount","setState","prevState","count","decrementCount","reset","seconds","start","myInterval","setInterval","stop","clearInterval","state","parseInt","increment","prevProps","isRunning","onTimerEnded","initialState","gameId","board","Array","fill","selected","TicTacToe","getFirstRoundUpdates","toConsumableArray","turn","getSecondRoundUpdates","_this$state","clickedSquare","newBoard","handleClick","updates","_updates$board","_updates$selected","games","moves","move","v0","v1","v2","checkWinner","push","winner","console","log","player","_this$state2","objectSpread","timesXWon","_this2","_this$state3","lastGame","xWonCount","filter","game","oWonCount","hasMoves","player1Name","pages_Timer","time","pages_Header","cn","index","isWinning","isSelected","timesUp","disabled","event","pages_Footer","player2Name","Settings","didstart","handleChange","bind","assertThisInitialized","handleSubmit","target","pages_TicTacToe","Pane","display","alignItems","flexDirection","justifyContent","marginTop","width","padding","borderRadius","border","TextInputField","label","placeholder","onChange","evt","type","SelectField","from","Button","appearance","iconBefore","GrabbLiga","howManyWins","grabb","howManyPoints","winsSelected","date","Date","updateTable","object","winOrNot","alert","sort","b","Table","Head","TextHeaderCell","isSelectable","onSelect","Body","height","Row","TextCell","isNumber","Combobox","items","Checkbox","checked","margin-right","e","es","color","marginLeft","Popover","content","_ref","close","paddingX","Riddle","handleInput","info","table","houseNumber","houseInfo","tableNew","didWin","Grabbermind","getRandomInt","min","max","ceil","floor","random","changeColor","tmpBoard","getCorrectedRows","correctAnswer","colorArray","rowCount","rows","answers","slice","answer","_loop","includes","result","colors","r","buttons","sidebarResults","gameIsOn","gameWon","tmpArray","tmpButtons","currentRowNumber","correctedRows","disableLow","disableHigh","arrow","Icon","icon","size","style","position","visibility","bottom","TimerGrabberMind","popover","commonjs_layers","background","paddingY","gridTemplateColumns","gridGap","borderradius","left","flex","justifySelf","checkRow","startGame","row","Grabbermind_Result","Result","_this$props","isArray","margin","React","App","react_router_dom","to","react_router","exact","path","render","pages_Grabbar","pages_Settings","pages_GrabbLiga","pages_Riddle","pages_Grabbermind","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26437f03.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Grabb extends Component {\n  render() {\n    const name = this.props.name\n    const attributes = this.props.attributes\n    const total = this.props.total\n\n    const attributeDivs = attributes.map(attribute => (\n      <div className=\"attribute\">\n        <div className=\"value\">{attribute.value}</div>\n        <div className=\"shortName\" title={attribute.name}>\n          {attribute.shortName}\n        </div>\n      </div>\n    ));\n\n    return (\n      <div className=\"card\">\n        <div className=\"total\">{total}</div>\n        <div className=\"TotalText\">TOT</div>\n        <div className=\"Name\">{name}</div>\n        <div className=\"score\">{attributeDivs}</div>\n        <div className=\"DownText\">GK19</div>\n      </div>\n    );\n  }\n}\n","export class GrabbModel {\n  constructor(name, attributes, points, wins, results) {\n    this.name = name;\n    this.attributes = attributes;\n    this.results = results;\n    this.points = this.totalPoints(results);\n    this.wins = this.totalWins(results);\n  }\n\n  totalPoints = results => {\n    let sum = 0;\n    for (var i in results) {\n      sum = sum + results[i].points;\n    }\n    return sum;\n  };\n\n  totalWins = results => {\n    let sum = 0;\n    for (var i in results) {\n      if (results[i].win === true) {\n        sum = sum + 1;\n      }\n    }\n    return sum;\n  };\n\n  getTotal = () => {\n    const total = this.attributes.reduce(\n      (total, attribute) => total + attribute.value,\n      0\n    );\n    return Math.round(total / this.attributes.length);\n  };\n}\n","import { GrabbModel } from \"./GrabbModel\";\nconst grabb1 = new GrabbModel(\n  \"Jompahl\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 97\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 94\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 92\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 97\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 94\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 90\n    }\n  ],\n  11,\n  2,\n  [\n    {\n      points: 6,\n      win: true\n    },\n    {\n      points: 5,\n      win: true\n    }\n  ]\n);\nconst grabb2 = new GrabbModel(\n  \"Tobias\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 97\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 94\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 87\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 70\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 22\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 99\n    }\n  ],\n  2,\n  4,\n  [\n    { points: 2, win: false },\n    {\n      points: 0,\n      win: false\n    }\n  ]\n);\n\nconst grabb3 = new GrabbModel(\n  \"Jojje\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 82\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 97\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 92\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 71\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 12\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 80\n    }\n  ],\n  9,\n  1,\n  [\n    {\n      points: 2,\n      win: false\n    },\n    {\n      points: 5,\n      win: true\n    }\n  ]\n);\n\nconst grabb4 = new GrabbModel(\n  \"Love\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 95\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 94\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 92\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 97\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 90\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 87\n    }\n  ],\n  5,\n  1,\n  [\n    {\n      points: 0,\n      win: false\n    },\n    {\n      points: 5,\n      win: true\n    }\n  ]\n);\n\nconst grabb5 = new GrabbModel(\n  \"Gurra\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 32\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 94\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 92\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 99\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 22\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 72\n    }\n  ],\n  0,\n  0,\n  [\n    {\n      points: 0,\n      win: false\n    },\n    {\n      points: 0,\n      win: false\n    }\n  ]\n);\n\nconst grabb6 = new GrabbModel(\n  \"Olle\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 53\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 45\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 67\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 86\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 12\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 80\n    }\n  ],\n  0,\n  0,\n  [\n    {\n      points: 0,\n      win: false\n    },\n    {\n      points: 0,\n      win: false\n    }\n  ]\n);\n\nconst grabb7 = new GrabbModel(\n  \"Arvid\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 67\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 94\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 92\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 97\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 45\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 90\n    }\n  ],\n  9,\n  1,\n  [\n    {\n      points: 4,\n      win: false\n    },\n    {\n      points: 5,\n      win: true\n    }\n  ]\n);\n\nconst grabb8 = new GrabbModel(\n  \"David\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 97\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 94\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 89\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 46\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 43\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 82\n    }\n  ],\n  0,\n  0,\n  [\n    {\n      points: 0,\n      win: false\n    },\n    {\n      points: 0,\n      win: false\n    }\n  ]\n);\n\nconst grabb9 = new GrabbModel(\n  \"Ogge\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 92\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 97\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 62\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 89\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 12\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 80\n    }\n  ],\n  6,\n  1,\n  [\n    {\n      points: 6,\n      win: true\n    },\n    {\n      points: 0,\n      win: false\n    }\n  ]\n);\n\nconst grabb10 = new GrabbModel(\n  \"Gunnar\",\n  [\n    {\n      id: \"l&d\",\n      name: \"Life & Death\",\n      shortName: \"L&D\",\n      value: 83\n    },\n    {\n      id: \"agg\",\n      name: \"Aggression\",\n      shortName: \"AGG\",\n      value: 81\n    },\n    {\n      id: \"phf\",\n      name: \"Påhållsförmåga\",\n      shortName: \"PHF\",\n      value: 67\n    },\n    {\n      id: \"phr\",\n      name: \"Påhållsresistens\",\n      shortName: \"PHR\",\n      value: 89\n    },\n    {\n      id: \"kyl\",\n      name: \"Kyla\",\n      shortName: \"KYL\",\n      value: 45\n    },\n    {\n      id: \"alm\",\n      name: \"Allmänbildning\",\n      shortName: \"ALM\",\n      value: 99\n    }\n  ],\n  2,\n  0,\n  [{ points: 2, win: false }]\n);\n\nexport const grabbar = [\n  grabb1,\n  grabb2,\n  grabb3,\n  grabb4,\n  grabb5,\n  grabb6,\n  grabb7,\n  grabb8,\n  grabb9,\n  grabb10\n];\n","import React from 'react'\nimport { Grabb } from \"../Grabb\";\nimport { grabbar } from \"../data\";\n\nconst grabb0 = grabbar[0];\nconst grabb1 = grabbar[1];\nconst grabb2 = grabbar[2];\nconst grabb3 = grabbar[3];\nconst grabb4 = grabbar[4];\nconst grabb5 = grabbar[5];\nconst grabb6 = grabbar[6];\nconst grabb7 = grabbar[7];\nconst grabb8 = grabbar[8];\nconst grabb9 = grabbar[9];\n\nconst Grabbar = () => (\n    <div>\n        <Grabb\n          name={grabb0.name}\n          attributes={grabb0.attributes}\n          total={grabb0.getTotal()}\n        >\n          <button>Hej</button>\n        </Grabb>\n\n        <Grabb\n          name={grabb1.name}\n          attributes={grabb1.attributes}\n          total={grabb1.getTotal()}\n        />\n        <Grabb\n          name={grabb2.name}\n          attributes={grabb2.attributes}\n          total={grabb2.getTotal()}\n        />\n        <Grabb\n          name={grabb3.name}\n          attributes={grabb3.attributes}\n          total={grabb3.getTotal()}\n        />\n        <Grabb\n          name={grabb4.name}\n          attributes={grabb4.attributes}\n          total={grabb4.getTotal()}\n        />\n        <Grabb\n          name={grabb5.name}\n          attributes={grabb5.attributes}\n          total={grabb5.getTotal()}\n        />\n        <Grabb\n          name={grabb6.name}\n          attributes={grabb6.attributes}\n          total={grabb6.getTotal()}\n        />\n        <Grabb\n          name={grabb7.name}\n          attributes={grabb7.attributes}\n          total={grabb7.getTotal()}\n        />\n        <Grabb\n          name={grabb8.name}\n          attributes={grabb8.attributes}\n          total={grabb8.getTotal()}\n        />\n        <Grabb\n          name={grabb9.name}\n          attributes={grabb9.attributes}\n          total={grabb9.getTotal()}\n        />\n    </div>\n)\n\nexport default Grabbar","import React from \"react\";\n\nfunction Header(props) {\n  const { totalMoves } = props;\n\n  return (\n    <React.Fragment>\n      <div id=\"head\">Jompahls Tic Tac Toe</div>\n      <div className=\"totalMoves\">Moves: {totalMoves} </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { MdRefresh } from 'react-icons/md'\n\nfunction Footer(props) {\n    const hasWinner = props.hasWinner;\n    const handleRestart = props.handleRestart;\n    \n  return (\n    <div id=\"footer\">\n      {hasWinner ? (\n        <button className=\"againButton\" onClick={handleRestart}>\n          Play Again?\n        </button>\n      ) : (\n        <button className=\"resetButton\" onClick={handleRestart}>\n          <MdRefresh />\n          <span>Reset</span>\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react'\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: parseInt(this.props.seconds),\n    }\n  }\n\n  incrementCount = () => {\n    this.setState((prevState) => ({\n      count: prevState.count + 1,\n    }))\n  }\n\n  decrementCount = () => {\n    this.setState((prevState) => ({\n      count: prevState.count - 1,\n    }))\n  }\n\n  reset = () => {\n    this.setState({ count: this.props.seconds })\n  }\n\n  start = () => {\n    this.myInterval = setInterval(this.decrementCount, 1000)\n  }\n\n  stop = () => {\n    clearInterval(this.myInterval)\n    this.setState({\n      count: this.state.count + parseInt(this.props.increment),\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isRunning && !prevProps.isRunning) {\n      this.start()\n    } else if (!this.props.isRunning && prevProps.isRunning) {\n      this.stop()\n    }\n\n    if (this.state.count === 0 && prevState.count !== 0) {\n      this.props.onTimerEnded()\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval)\n  }\n\n  render() {\n    const { count } = this.state\n    return <div className='Timer'>{count}</div>\n  }\n}\n\nexport default Timer\n","import React, { Component } from \"react\";\nimport cn from \"classnames\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Timer from \"./Timer\";\n\nfunction checkWinner(board) {\n  const moves = [\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8]\n  ];\n\n  for (let i = 0; i < moves.length; i++) {\n    const move = moves[i];\n\n    const v0 = board[move[0]];\n    const v1 = board[move[1]];\n    const v2 = board[move[2]];\n\n    if (v0 !== \"\" && v0 === v1 && v1 === v2) {\n      return move;\n    }\n  }\n\n  return null;\n}\n\nconst initialState = {\n  gameId: 0,\n  //turn: \"X\",\n  board: Array(9).fill(\"\"),\n  totalMoves: 0,\n  selected: null\n};\n\nclass TicTacToe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      games: [],\n      timesXWon: 0,\n      turn: \"X\"\n    };\n  }\n\n  getFirstRoundUpdates = i => {\n    if (this.state.board[i] !== \"\") {\n      return null;\n    }\n\n    const board = [...this.state.board];\n    board[i] = this.state.turn;\n    return { board };\n  };\n\n  getSecondRoundUpdates = i => {\n    const { turn, selected, board } = this.state;\n    const clickedSquare = board[i];\n\n    // In round two, we must start by selecting which piece to move.\n    if (selected == null) {\n      // We are only allowed to select our own piece.\n      if (clickedSquare !== turn) {\n        return null;\n      }\n\n      return { selected: i };\n    }\n\n    // When we have a selected piece, we allow changing it to another one of our pieces.\n    if (clickedSquare === turn) {\n      return { selected: i };\n    }\n\n    // It's not allowed to move the selected piece to our opponent's squares.\n    if (clickedSquare !== \"\") {\n      return null;\n    }\n\n    // Move the selected piece to an empty square.\n    const newBoard = [...board];\n    newBoard[i] = turn;\n    newBoard[selected] = \"\";\n    return { board: newBoard, selected: null };\n  };\n\n  handleClick = i => {\n    const updates =\n      this.state.totalMoves < 6\n        ? this.getFirstRoundUpdates(i)\n        : this.getSecondRoundUpdates(i);\n\n    if (!updates) {\n      return null;\n    }\n\n    const {\n      board = this.state.board,\n      selected = this.state.selected\n    } = updates;\n    let turn = this.state.turn;\n    let totalMoves = this.state.totalMoves;\n    let games = [...this.state.games];\n\n    if (board !== this.state.board) {\n      turn = turn === \"X\" ? \"O\" : \"X\";\n      totalMoves = totalMoves + 1;\n\n      const winningCombination = checkWinner(board);\n\n      if (winningCombination) {\n        games.push({\n          board,\n          totalMoves,\n          winner: this.state.turn,\n          id: this.state.gameId\n        });\n      }\n    }\n\n    this.setState(\n      {\n        games,\n        turn,\n        totalMoves,\n        selected,\n        board\n      },\n      () => {\n        console.log({ selected: this.state.selected, turn: this.state.turn });\n      }\n    );\n  };\n\n  onTimerEnded = player => {\n    let games = [...this.state.games];\n\n    games.push({\n      board: this.state.board,\n      totalMoves: this.state.totalMoves,\n      winner: player === \"X\" ? \"O\" : \"X\",\n      id: this.state.gameId\n    });\n\n    this.setState({ games });\n  };\n\n  handleRestart = () => {\n    let { turn, totalMoves } = this.state;\n\n    if (totalMoves % 2 === 0) {\n      turn = turn === \"X\" ? \"O\" : \"X\";\n    }\n\n    this.setState({\n      ...initialState,\n      gameId: this.state.gameId + 1,\n      turn\n    });\n  };\n\n  render() {\n    const { board, totalMoves, turn, gameId, games } = this.state;\n    const lastGame = games[games.length - 1];\n    const hasWinner = lastGame && lastGame.id === gameId;\n    const xWonCount = games.filter(game => game.winner === \"X\").length;\n    const oWonCount = games.filter(game => game.winner === \"O\").length;\n    const hasMoves = totalMoves > 0;\n\n    return (\n      <div id=\"game\">\n        <div className={\"timer-container\"}>\n          {this.props.player1Name} is playing X\n          <Timer\n            key={gameId}\n            onTimerEnded={() => {\n              this.onTimerEnded(\"X\");\n            }}\n            seconds={this.props.time}\n            increment={this.props.increment}\n            isRunning={!hasWinner && hasMoves && turn === \"X\"}\n          />\n          games won: {xWonCount}\n        </div>\n        <div className={\"board-container\"}>\n          <Header totalMoves={totalMoves} />\n          {hasWinner && <div>Won: {turn === \"X\" ? \"O\" : \"X\"}</div>}\n          <div className={cn(\"board\", { hasWinner })}>\n            {board.map((value, index) => {\n              return (\n                <button\n                  key={index}\n                  className={cn(\"square\", {\n                    isWinning: hasWinner && lastGame.winner === value,\n                    isSelected: this.state.selected === index,\n                    timesUp: hasWinner\n                  })}\n                  disabled={hasWinner}\n                  onClick={event => {\n                    this.handleClick(index);\n                  }}\n                >\n                  {value}\n                </button>\n              );\n            })}\n          </div>\n          <Footer hasWinner={hasWinner} handleRestart={this.handleRestart} />\n        </div>\n        <div className={\"timer-container\"}>\n          {this.props.player2Name} is playing O\n          <Timer\n            key={gameId}\n            onTimerEnded={() => {\n              this.onTimerEnded(\"O\");\n            }}\n            seconds={this.props.time}\n            increment={this.props.increment}\n            isRunning={!hasWinner && hasMoves && turn === \"O\"}\n          />\n          games won: {oWonCount}\n        </div>{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default TicTacToe;\n","import React, { Component } from \"react\";\nimport TicTacToe from \"./TicTacToe\";\nimport { Button, TextInputField, Pane, SelectField } from \"evergreen-ui\";\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player1Name: \"\",\n      player2Name: \"\",\n      time: \"3\",\n      increment: \"2\",\n      didstart: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    /*alert(\"A name was submitted: \" + this.state.value);\n    event.preventDefault();*/\n    this.setState({ didstart: true });\n  }\n\n  render() {\n    const { player1Name, player2Name, time, increment, didstart } = this.state;\n\n    if (didstart) {\n      return <TicTacToe {...this.state} />;\n    }\n    return (\n      <Pane\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        marginTop={50}\n      >\n        <Pane\n          width={600}\n          padding={20}\n          borderRadius={3}\n          border=\"default\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <TextInputField\n            label=\" Player 1\"\n            placeholder=\"Firstname Lastname\"\n            value={player1Name}\n            onChange={evt => {\n              this.setState({ player1Name: evt.target.value });\n            }}\n          />\n          <TextInputField\n            label=\" Player 2\"\n            placeholder=\"Firstname Lastname\"\n            value={player2Name}\n            onChange={evt => {\n              this.setState({ player2Name: evt.target.value });\n            }}\n          />\n          <TextInputField\n            type=\"number\"\n            label=\"Time\"\n            placeholder=\"10\"\n            value={time}\n            onChange={evt => {\n              this.setState({ time: evt.target.value });\n            }}\n          />\n          <SelectField\n            label=\"Time increment\"\n            value={increment}\n            onChange={evt => {\n              this.setState({ increment: evt.target.value });\n            }}\n          >\n            {Array.from({ length: 11 }, (key, index) => (\n              <option key={index} value={index}>\n                {index}\n              </option>\n            ))}\n          </SelectField>\n          <Pane display=\"flex\" justifyContent=\"flex-end\">\n            <Button\n              appearance=\"primary\"\n              onClick={this.handleSubmit}\n              iconBefore=\"tick-circle\"\n            >\n              Start Game\n            </Button>\n          </Pane>\n        </Pane>\n      </Pane>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  Combobox,\n  Radio,\n  Checkbox,\n  Button,\n  Popover,\n  Pane\n} from \"evergreen-ui\";\nimport { grabbar } from \"../data\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\n//import { GrabbModel } from \"./GrabbModel\";\n\nclass GrabbLiga extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winsSelected: false,\n      win: false,\n      grabb: null,\n      points: null,\n      date: new Date(),\n      updateTable: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  winOrNot() {\n    if (this.state.win === false) {\n      return \"han vann inte grabbkampen\";\n    } else {\n      return \"han vann även grabbkampen\";\n    }\n  }\n\n  handleClick(event) {\n    const { grabb, points, win, updateTable } = this.state;\n\n    if (grabb !== null && points !== null) {\n      for (var object in grabbar) {\n        if (grabbar[object].name === grabb) {\n          grabbar[object].results.push({ points, win });\n          const winOrNot = this.winOrNot;\n          console.log(grabbar[object].results);\n          console.log(grabbar[object].points);\n          this.setState({ updateTable: updateTable + 1 });\n          alert(\"hej\");\n          return;\n        }\n      }\n    }\n  }\n\n  howManyWins = grabb => {\n    let sum = 0;\n    for (var i in grabb.results) {\n      console.log(\"i loop\");\n      if (grabb.results[i].win === true) {\n        console.log(\"i if\");\n        sum = sum + 1;\n      }\n    }\n    console.log(sum);\n    return sum;\n  };\n\n  howManyPoints = grabb => {\n    let sum = 0;\n    for (var i in grabb.results) {\n      sum = sum + grabb.results[i].points;\n    }\n    return sum;\n  };\n\n  render() {\n    const { grabb, points, win, winsSelected } = this.state;\n\n    console.log(this.state);\n\n    //Sorts the array in order of points, highest to lowest todo - user should be able to decide what to sort\n    if (!winsSelected) {\n      grabbar.sort(function(a, b) {\n        return b.points - a.points;\n      });\n    } else {\n      grabbar.sort(function(a, b) {\n        console.log(\"inne i sortering\");\n        return b.wins - a.wins;\n      });\n    }\n\n    return (\n      <div>\n        <div className=\"table\">\n          <Table>\n            <Table.Head>\n              <Table.TextHeaderCell>Grabb</Table.TextHeaderCell>\n              <Table.TextHeaderCell\n                isSelectable\n                onSelect={() => this.setState({ winsSelected: true })}\n              >\n                Vinster\n              </Table.TextHeaderCell>\n              <Table.TextHeaderCell>Poäng</Table.TextHeaderCell>\n            </Table.Head>\n            <Table.Body height={480}>\n              {grabbar.map(grabb => (\n                <Table.Row\n                  key={grabb.name}\n                  isSelectable\n                  onSelect={() =>\n                    alert(\n                      \"Du valde \" +\n                        grabb.name +\n                        \" han har vunnit \" +\n                        this.howManyWins(grabb) +\n                        \" gånger\"\n                    )\n                  }\n                >\n                  <Table.TextCell>{grabb.name}</Table.TextCell>\n                  <Table.TextCell>{this.howManyWins(grabb)}</Table.TextCell>\n                  <Table.TextCell isNumber>\n                    {this.howManyPoints(grabb)}\n                  </Table.TextCell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </div>\n        <div className=\"addScore\">\n          <Combobox\n            items={grabbar.map(grabb => grabb.name)}\n            placeholder=\"Grabb\"\n            onChange={selected => this.setState({ grabb: selected })}\n          />\n          <Combobox\n            items={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]}\n            placeholder=\"Poäng\"\n            onChange={selected => this.setState({ points: selected })}\n          />\n          <Checkbox\n            className=\"checkbox\"\n            label=\"Vinst\"\n            checked={win}\n            margin-right={10}\n            onChange={e => this.setState({ win: e.target.checked })}\n          />\n          <DatePicker\n            selected={this.state.date}\n            onChange={selected => this.setState({ date: selected })}\n          />\n        </div>\n        <Button\n          className=\"submitScore\"\n          iconBefore=\"tick-circle\"\n          color=\"success\"\n          marginLeft={10}\n          onClick={this.handleClick}\n        >\n          Sumbit\n        </Button>\n        <Popover\n          content={({ close }) => (\n            <Pane\n              width={320}\n              height={320}\n              paddingX={40}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              flexDirection=\"column\"\n            >\n              <Button onClick={close}>Close</Button>\n              <Combobox\n                items={grabbar.map(grabb => grabb.name)}\n                placeholder=\"Grabb\"\n                onChange={selected => this.setState({ grabb: selected })}\n              />\n              <Combobox\n                items={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]}\n                placeholder=\"Poäng\"\n                onChange={selected => this.setState({ points: selected })}\n              />\n              <Checkbox\n                label=\"Vinst\"\n                checked={win}\n                onChange={e => this.setState({ win: e.target.checked })}\n              />\n            </Pane>\n          )}\n        >\n          <Button>Trigger Popover</Button>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default GrabbLiga;\n","import React, { Component } from \"react\";\n//import { TextInputField } from \"evergreen-ui/commonjs/text-input\";\n\nclass Riddle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: Array(25).fill(\"\"),\n      houseNumber: [1, 2, 3, 4, 5],\n      houseInfo: [\"Color\", \"Name\", \"Newspaper\", \"Drink\", \"Pet\"]\n    };\n  }\n\n  handleInput = (info, index) => {\n    const table = [...this.state.table];\n    table[index] = info;\n    return table;\n  };\n\n  render() {\n    const table = this.state.table;\n    const houseNumber = this.state.houseNumber;\n    const houseInfo = this.state.houseInfo;\n    return (\n      <React.Fragment>\n        <div className=\"riddleScreen\">\n          <div className=\"houseInfo\">\n            {houseInfo.map((value, index) => {\n              return <div key={index}>{houseInfo[index]}</div>;\n            })}\n          </div>\n          <div className=\"centerRiddle\">\n            <div className=\"houseNumber\">\n              {houseNumber.map((value, index) => {\n                return <div key={index}>{houseNumber[index]}</div>;\n              })}\n            </div>\n            <div className=\"RiddleBoard\">\n              {table.map((value, index) => {\n                return (\n                  <input\n                    key={index}\n                    className=\"Riddlesquare\"\n                    type=\"text\"\n                    //value={table[{ index }]}\n                    onChange={evt => {\n                      //   const table2 = table.splice();\n\n                      console.log(table);\n                      const tableNew = this.handleInput(\n                        evt.target.value,\n                        index\n                      );\n                      this.setState({ table: tableNew });\n\n                      //   this.setState(prevState => {\n                      //     const { table } = prevState;\n                      //     table: table.splice(index, 0, evt.target.value);\n                      //   });\n                    }}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"infoList\">\n            <li>\n              1. {table[7]} bor i det {table[2]}a huset.\n            </li>\n            <li>\n              2. {table[9]} har en {table[24]} som husdjur.\n            </li>\n            <li>\n              3. {table[6]} dricker {table[16]}.\n            </li>\n            <li>\n              4. Det {table[3]}a huset ligger direkt till vänster om det{\" \"}\n              {table[4]}a huset.\n            </li>\n            <li>\n              5. Den som bor i det {table[3]}a huset dricker {table[18]}.\n            </li>\n            <li>\n              6. Husägaren som läser {table[12]} har en {table[22]} som husdjur.\n            </li>\n            <li>\n              7. Den som bor i det {table[0]}a huset läser {table[10]}.\n            </li>\n            <li>8. Den som bor i huset i mitten dricker {table[17]}.</li>\n            <li>9. {table[5]} bor i det första huset.</li>\n            <li>\n              10. Husägaren som läser {table[11]} bor bredvid den som har en{\" \"}\n              {table[20]} som husdjur.\n            </li>\n            <li>\n              11. Husägaren som har ett {table[21]} som husdjur bor bredvid den\n              som läser {table[10]}.\n            </li>\n            <li>\n              12. Husägaren som läser {table[14]} dricker {table[19]}.\n            </li>\n            <li>\n              13. {table[8]} läser {table[13]}.\n            </li>\n            <li>\n              14. {table[5]} bor bredvid det {table[1]}a huset.\n            </li>\n            <li>\n              15. Husägaren som läser {table[11]} bor bredvid den som dricker{\" \"}\n              {table[15]}.\n            </li>\n            <li>Fråga: Vem har en {table[23]} som husdjur?</li>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Riddle;\n","import React, { Component } from 'react'\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: parseInt(this.props.seconds),\n    }\n  }\n\n  incrementCount = () => {\n    this.setState((prevState) => ({\n      count: prevState.count + 1,\n    }))\n  }\n\n  decrementCount = () => {\n    this.setState((prevState) => ({\n      count: prevState.count - 1,\n    }))\n  }\n\n  reset = () => {\n    this.setState({ count: this.props.seconds })\n  }\n\n  start = () => {\n    this.myInterval = setInterval(this.incrementCount, 1000)\n  }\n\n  stop = () => {\n    clearInterval(this.myInterval)\n    this.setState({\n      count: this.state.count + parseInt(this.props.increment),\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isRunning && !prevProps.isRunning) {\n      this.start()\n    } else if (!this.props.isRunning && prevProps.isRunning) {\n      this.stop()\n    } else if (!this.props.didWin && prevProps.didWin) {\n      this.stop()\n    }\n\n    if (this.state.count === 0 && prevState.count !== 0) {\n      this.props.onTimerEnded()\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval)\n  }\n\n  render() {\n    const { count } = this.state\n    return <div className='Timer'>{count}</div>\n  }\n}\n\nexport default Timer\n","import React, { Component } from 'react'\nimport { Popover } from 'evergreen-ui/commonjs/popover'\nimport { Pane } from 'evergreen-ui/commonjs/layers'\nimport { Button, Icon } from 'evergreen-ui'\nimport { MdRepeat } from 'react-icons/md'\nimport { Position } from 'evergreen-ui/commonjs/constants'\nimport TimerGrabberMind from './TimerGrabberMind'\n\nclass Grabbermind extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      table: Array(32).fill(''),\n      buttons: [\n        'Red',\n        'Green',\n        'Blue',\n        'Orange',\n        'White',\n        'Gray',\n        'Pink',\n        'Yellow',\n      ],\n      sidebarResults: Array(8).fill(''),\n      rowCount: 0,\n      gameIsOn: false,\n      gameWon: false,\n      colorArray: Array(4).fill(''),\n    }\n  }\n\n  startGame() {\n    let gameIsOn = this.state.gameIsOn\n    gameIsOn = true\n\n    this.setState({ gameIsOn: gameIsOn })\n\n    var i\n    let tmpArray = [...this.state.colorArray]\n    let tmpButtons = [...this.state.buttons]\n\n    for (i = 0; i < tmpArray.length; i++) {\n      tmpArray[i] = tmpButtons[this.getRandomInt(0, 7)]\n    }\n    this.setState({ colorArray: tmpArray })\n  }\n\n  getRandomInt = (min, max) => {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  changeColor = (color, index) => {\n    console.log(color, index)\n    let tmpBoard = [...this.state.table]\n    tmpBoard[index] = color\n    this.setState({ table: tmpBoard })\n    console.log(tmpBoard)\n  }\n\n  checkRow() {\n    let { rowCount, table, colorArray, gameIsOn } = this.state\n\n    console.log('checkrow pushed ' + this.state.colorArray)\n\n    let currentRowNumber = 0\n\n    if (!gameIsOn) {\n      alert('please start game first')\n      return\n    }\n\n    if (rowCount !== 0) {\n      currentRowNumber = rowCount * 4 + 4\n    }\n\n    for (var i = 0; i < currentRowNumber; i++) {\n      if (table[i] === '') {\n        alert('please fill the whole row')\n        return\n      }\n    }\n\n    rowCount++\n\n    console.log('rowcount: ' + rowCount)\n\n    this.setState({ rowCount: rowCount })\n  }\n\n  getCorrectedRows = () => {\n    const { colorArray: correctAnswer, rowCount, table } = this.state //fråga tobbe angående colorArray:\n    const rows = []\n\n    for (let i = 0; i < table.length / 4; i++) {\n      if (i >= rowCount) {\n        rows.push([])\n        continue //fråga tobbe vad meniingen med denna if satsen är\n      }\n\n      const answers = table.slice(i * 4, i * 4 + 4)\n      const results = Array(4).fill('')\n\n      for (let i = 0; i < answers.length; i++) {\n        const answer = answers[i]\n\n        if (answer === correctAnswer[i]) {\n          results[i] = ['white', answer]\n        }\n      }\n\n      for (let i = 0; i < answers.length; i++) {\n        const answer = answers[i]\n\n        if (results[i] || !correctAnswer.includes(answer)) {\n          continue // fråga tobbe varför vi gör denna checken är det för att effektivisera?\n        }\n\n        const total = correctAnswer.filter((color) => color === answer).length\n        const current = results.filter((result) => result[1] === answer).length\n\n        if (current < total) {\n          results[i] = ['red', answer]\n        }\n      }\n\n      const colors = results.map((r) => r[0]).filter((r) => r != null)\n      rows.push(colors)\n    }\n\n    return rows\n  }\n\n  render() {\n    const { table, buttons, rowCount, sidebarResults, gameIsOn } = this.state\n\n    const correctedRows = this.getCorrectedRows()\n    const lastRow = rowCount > 0 ? correctedRows[rowCount - 1] : []\n    const didWin = lastRow.filter((color) => color === 'white').length === 4\n\n    let disableLow = 4 + rowCount * 4\n    let disableHigh = rowCount * 4\n\n    let arrow = (\n      <Icon\n        icon='arrow-right'\n        size={40}\n        color='success'\n        style={{\n          position: 'absolute',\n          visibility: !gameIsOn ? 'hidden' : 'visible',\n\n          bottom: rowCount > 0 ? 20 + 81 * rowCount : 20,\n        }}\n      />\n    )\n\n    return (\n      <div className='grabbermind'>\n        <div\n          className='winningPage'\n          style={{ visibility: didWin ? 'visible' : 'hidden' }}\n        >\n          You won Your score is:{' '}\n        </div>\n        <div className='sideBar'>\n          <TimerGrabberMind seconds={0} isRunning={gameIsOn} didWin={didWin} />\n          {arrow}\n        </div>\n        <div>\n          <div className='grabbermindTable'>\n            {table.map((value, index) => {\n              return (\n                <Popover\n                  key={index}\n                  content={({ close }) => (\n                    <Pane\n                      className='popover'\n                      background='white'\n                      paddingY={10}\n                      display='grid'\n                      gridTemplateColumns='repeat(4, auto)'\n                      gridGap={10}\n                    >\n                      {buttons.map((value) => {\n                        return (\n                          <Button\n                            key={value}\n                            //className='buttonMind'\n\n                            background={value}\n                            borderradius='50%'\n                            border='2px solid rgba(0, 0, 0, .2)'\n                            height={30}\n                            width={30}\n                            onClick={(event) => {\n                              this.changeColor(value, index)\n                            }}\n                            padding={0}\n                          />\n                        )\n                      })}\n                    </Pane>\n                  )}\n                >\n                  <Button\n                    justifyContent='center'\n                    alignItems='center'\n                    height={80}\n                    width='25%'\n                    disabled={\n                      gameIsOn\n                        ? index >= disableLow || index < disableHigh\n                        : 'none'\n                    }\n                    style={{\n                      position: 'absolute',\n                      left: 80 * (index % 4),\n                      bottom: 80 * Math.floor(index / 4),\n                    }}\n                  >\n                    <Pane\n                      background={value}\n                      flex='0 0 50px'\n                      borderRadius='50%'\n                      justifySelf='center'\n                      height={50}\n                      width={50}\n                      style={{\n                        border: value ? '2px solid rgba(0, 0, 0, .2)' : 'none',\n                      }}\n                    />\n                  </Button>\n                </Popover>\n              )\n            })}\n          </div>{' '}\n          <button\n            onClick={(event) => {\n              this.checkRow()\n            }}\n          >\n            Check row\n          </button>\n          <button\n            onClick={(event) => {\n              this.startGame()\n            }}\n          >\n            Start Game\n          </button>\n          <Icon icon='cross' />\n        </div>\n        {}\n        <div className='sidebarResult'>\n          {correctedRows.map((row, index) => (\n            <div className='sidebarResults' key={index}>\n              <Result results={row} />\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Result extends React.Component {\n  render() {\n    const { answers, correctAnswer, results } = this.props\n    if (!Array.isArray(results)) {\n      console.log('fastnade i första +' + answers)\n      return null\n    } else if (Array.isArray(answers)) {\n      console.log(results)\n    }\n\n    console.log('jompahl' + results)\n\n    return (\n      <div className='pinHolder'>\n        {results.map((value, index) => {\n          return (\n            <div\n              key={index}\n              className='correctingPins'\n              style={{\n                background: value,\n                border: value ? '2px solid rgba(0, 0, 0, .2)' : 'none',\n                borderradius: '50%',\n                height: value ? 20 : 'none',\n                width: value ? 20 : 'none',\n                margin: value ? 5 : 'none',\n              }}\n            ></div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Grabbermind\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Grabbar from \"./pages/Grabbar\";\nimport Settings from \"./pages/Settings\";\nimport GrabbLiga from \"./pages/GrabbLiga\";\nimport Riddle from \"./pages/Riddle\";\nimport Grabbermind from \"./pages/Grabbermind\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <nav className=\"navigation\">\n          <Link to=\"/\">Start</Link>\n          <Link to=\"/grabbar\">Grabbar</Link>\n          <Link to=\"/grabbliga\">GrabbLiga</Link>\n          <Link to=\"/settings\">Tic Tac Toe</Link>\n          <Link to=\"/riddle\">GrabbGåta</Link>\n          <Link to=\"/Grabbermind\">Grabbermind</Link>\n        </nav>\n        <Route exact path=\"/\" render={() => <div>jompahl bajs</div>} />\n        <Route path=\"/grabbar\" render={() => <Grabbar />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n        <Route path=\"/grabbliga\" render={() => <GrabbLiga />} />\n        <Route path=\"/riddle\" render={() => <Riddle />} />\n        <Route path=\"/Grabbermind\" render={() => <Grabbermind />} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}